@page "/"
@using Novel.Common.Services
@using Novel.Common.Models
@inject NovelService NovelService
<nav>
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        @foreach (var tab in tabs)
        {
            <a class=@(selectNum==tab.Order?"nav-item nav-link active":"av-item nav-link") data-toggle="tab" role="tab" aria-controls="nav-home" aria-selected=@(selectNum==tab.Order?"true":"false") @onclick=@(()=>  TabSelect(tab.Order))>@tab.Title</a>
        }
    </div>
</nav>
<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
        @foreach (var item in updateNovels)
        {
            <div class="card   mb-3 border border-info rounded">
                <div class="card-body">
                    <span class="card-text">@item.Tag</span>
                    <h5 class="card-title">@item.Title</h5>
                    <p class="card-text">@item.NearlyChapter</p>
                    <p class="card-text">作者:@item.Author</p>
                    <p class="card-text">更新时间:@item.UpdateTime</p>
                    <a href="#" class="btn btn-outline-primary">加入书架</a> <a href="#" class="btn btn-outline-success ml-3">阅  读</a>
                </div>
            </div>
        }
    </div>
    <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">...</div>
    <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">...</div>
</div>
@code {
    List<NearlyUpdateNovel> updateNovels = new List<NearlyUpdateNovel>();
    List<NovelTab> tabs = new List<NovelTab>();
    int selectNum = 0;
    protected override async Task OnInitializedAsync()
    {
        tabs = await NovelService.GetTabs();
        updateNovels = await NovelService.GetNearlyUpdateList();
    }
    public async void TabSelect(int tabNum)
    {
        selectNum = tabNum;
        if (tabNum > 0)
        {
            updateNovels = await NovelService.GetTongRenList(tabNum);
        }
        else
        {
            updateNovels = await NovelService.GetNearlyUpdateList();
        }
    }
}

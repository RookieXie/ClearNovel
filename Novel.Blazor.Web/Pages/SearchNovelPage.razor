
@page "/search"
@using Novel.Common.Services
@using Novel.Common.Models
@inject SearchService SearchService

@if (string.IsNullOrEmpty(novelUrl))
{
    <h3 @ontouchstart="() => TestTouch()">@title</h3>
    <div class="text-info">
        <input type="text" @bind="@searchName" /> <button @onclick="async()=>await(IncrementCount())">搜索</button>
    </div>
    @if (searchResult.Contents == null || searchResult.Contents.Count == 0)
    {
        <p><em>暂无数据</em></p>
    }
    else
    {
        <p><em>@searchResult.Caption</em></p>
        <table class="table">
            <thead>
                <tr>
                    <th>标题</th>
                    <th>最新章节</th>
                    <th>作者</th>
                    <th>字数</th>
                    <th>更新时间</th>
                    <th>状态</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var novel in searchResult.Contents)
                {
                    <tr>
                        <td @ontouchstart="() => NovelUrlClick(novel.NovelUrl)">@novel.Title</td>
                        <td>@novel.Newest</td>
                        <td>@novel.Author</td>
                        <td>@novel.WordSize</td>
                        <td>@novel.UpdateTime</td>
                        <td>@novel.Status</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
else
{
    <button @onclick="BakcSearch">返回搜索</button>
    <CatalogComponent NovelUrl="@novelUrl"></CatalogComponent>
}

@code {
    string title = "小说";
    string searchName = "";
    string novelUrl = "";
    SearchResult searchResult = new SearchResult();
    async Task IncrementCount()
    {
        novelUrl = "";
        if (!string.IsNullOrEmpty(searchName))
        {
            searchResult = await SearchService.SearchNovel(searchName);
        }
    }
    void NovelUrlClick(string url)
    {
        novelUrl = url;
    }
    void BakcSearch()
    {
        novelUrl = "";
    }
    void TestTouch()
    {
        title = "touch";
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Novel.Common.DB;

namespace Novel.Common.Migrations
{
    [DbContext(typeof(NovelDBContext))]
    [Migration("20191010035342_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Novel.Common.DB.Model.BookCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChapterName");

                    b.Property<string>("ChapterUrl");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("NovelTitle");

                    b.Property<int>("Order");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("BookCatalog");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.BookShelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("NovelUrl");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("BookShelve");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.NomicCatalogDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("NomicId");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("NomicCatalog");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.NomicContentDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CatalogId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("ImgUrl");

                    b.Property<int>("Order");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("NomicContent");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.NomicDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Description");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Nomic");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.NovelBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Newest");

                    b.Property<string>("NewestUrl");

                    b.Property<string>("NovelUrl");

                    b.Property<string>("Status");

                    b.Property<string>("Title");

                    b.Property<string>("UpdateTime");

                    b.Property<string>("UserId");

                    b.Property<string>("WordSize");

                    b.HasKey("Id");

                    b.ToTable("NovelBook");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.NovelContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CatalogId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("Order");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("NovelContent");
                });

            modelBuilder.Entity("Novel.Common.DB.Model.ReadRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Chapter");

                    b.Property<string>("ChapterUrl");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Title");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ReadRecord");
                });
#pragma warning restore 612, 618
        }
    }
}
